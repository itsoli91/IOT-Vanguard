// <auto-generated />
using System;
using System.Collections.Generic;
using Core.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Core.Infrastructure.Migrations
{
    [DbContext(typeof(CoreContext))]
    partial class CoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Core.Domain.AggregatesModel.DeviceTemplate.DeviceTemplate", b =>
                {
                    b.Property<long>("SequentialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTimeOffset>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Namespace")
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("SequentialId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("DeviceTemplates");
                });

            modelBuilder.Entity("Core.Domain.AggregatesModel.DeviceTemplate.SemanticType", b =>
                {
                    b.Property<long>("SequentialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("IsComplex")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<List<string>>("Schemas")
                        .HasColumnType("text[]");

                    b.Property<List<string>>("Units")
                        .HasColumnType("text[]");

                    b.HasKey("SequentialId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("SemanticTypes");
                });

            modelBuilder.Entity("Core.Domain.AggregatesModel.DeviceTemplate.DeviceTemplate", b =>
                {
                    b.OwnsOne("Core.Domain.AggregatesModel.DeviceTemplate.DeviceTemplateModel", "Model", b1 =>
                        {
                            b1.Property<long>("SequentialId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTimeOffset>("CreatedDateTime")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<long>("DeviceTemplateId")
                                .HasColumnType("bigint");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasDefaultValueSql("gen_random_uuid()");

                            b1.Property<DateTimeOffset>("ModifiedDateTime")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("SequentialId");

                            b1.HasIndex("DeviceTemplateId")
                                .IsUnique();

                            b1.HasIndex("Id")
                                .IsUnique();

                            b1.ToTable("DeviceTemplateModels");

                            b1.WithOwner()
                                .HasForeignKey("DeviceTemplateId");

                            b1.OwnsMany("Core.Domain.AggregatesModel.DeviceTemplate.Capability", "Capabilities", b2 =>
                                {
                                    b2.Property<long>("SemanticTypeId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<long?>("CapabilitySemanticTypeSequentialId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("CapabilityType")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Comment")
                                        .HasColumnType("text");

                                    b2.Property<DateTimeOffset>("CreatedDateTime")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<string>("Description")
                                        .HasColumnType("text");

                                    b2.Property<long>("DeviceTemplateModelId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("DisplayName")
                                        .HasColumnType("text");

                                    b2.Property<string>("DisplayUnit")
                                        .HasColumnType("text");

                                    b2.Property<Guid>("Id")
                                        .HasColumnType("uuid")
                                        .HasDefaultValueSql("gen_random_uuid()");

                                    b2.Property<bool>("IsComplex")
                                        .HasColumnType("boolean");

                                    b2.Property<DateTimeOffset>("ModifiedDateTime")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.Property<int>("Schema")
                                        .HasColumnType("integer");

                                    b2.Property<long>("SequentialId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Unit")
                                        .HasColumnType("integer");

                                    b2.HasKey("SemanticTypeId");

                                    b2.HasIndex("CapabilitySemanticTypeSequentialId")
                                        .IsUnique();

                                    b2.HasIndex("DeviceTemplateModelId");

                                    b2.HasIndex("Id")
                                        .IsUnique();

                                    b2.ToTable("Capabilities");

                                    b2.HasOne("Core.Domain.AggregatesModel.DeviceTemplate.SemanticType", "CapabilitySemanticType")
                                        .WithOne()
                                        .HasForeignKey("Core.Domain.AggregatesModel.DeviceTemplate.Capability", "CapabilitySemanticTypeSequentialId");

                                    b2.WithOwner()
                                        .HasForeignKey("DeviceTemplateModelId");

                                    b2.OwnsMany("Core.Domain.AggregatesModel.DeviceTemplate.SubCapability", "SubCapabilities", b3 =>
                                        {
                                            b3.Property<long>("SequentialId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("bigint")
                                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                            b3.Property<long>("CapabilityId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTimeOffset>("CreatedDateTime")
                                                .HasColumnType("timestamp with time zone");

                                            b3.Property<string>("DisplayName")
                                                .HasColumnType("text");

                                            b3.Property<Guid>("Id")
                                                .HasColumnType("uuid")
                                                .HasDefaultValueSql("gen_random_uuid()");

                                            b3.Property<DateTimeOffset>("ModifiedDateTime")
                                                .HasColumnType("timestamp with time zone");

                                            b3.Property<string>("Name")
                                                .HasColumnType("text");

                                            b3.Property<int>("Schema")
                                                .HasColumnType("integer");

                                            b3.HasKey("SequentialId");

                                            b3.HasIndex("CapabilityId");

                                            b3.HasIndex("Id")
                                                .IsUnique();

                                            b3.ToTable("SubCapabilities");

                                            b3.WithOwner()
                                                .HasForeignKey("CapabilityId");
                                        });

                                    b2.Navigation("CapabilitySemanticType");

                                    b2.Navigation("SubCapabilities");
                                });

                            b1.Navigation("Capabilities");
                        });

                    b.Navigation("Model");
                });
#pragma warning restore 612, 618
        }
    }
}
