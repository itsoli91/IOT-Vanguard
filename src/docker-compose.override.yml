version: '3.4'


services:

  #mqtt.broker:
  #  container_name: mqtt.broker
  #  image: vernemq/vernemq
  #  environment:
  #   - DOCKER_VERNEMQ_ACCEPT_EULA=yes
  #   - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on
  #  ports:
  #   - "1883:1883"
  #  networks:
  #   - vangurdiot



  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"
    networks:
     - vangurdiot


  portainer:
    container_name: portainer
    restart: always
    ports:
      - "15000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker_volumes/portainer_data:/data
    networks:
     - vangurdiot


  ## application services

  transport.mqtt:
    container_name: transport.mqtt
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "14000:80"
      - "1883:1883"

    networks:
     - vangurdiot

  transport.mqtt-dapr:
    container_name: transport.mqtt-dapr
    command: [ "./daprd",
               "-app-id", "transport.mqtt",
               "-app-port", "80",
               "-components-path", "/components"]
    depends_on:
      - transport.mqtt
    network_mode: "service:transport.mqtt"
    volumes:
    - ./dapr/components/:/components   



  core.api:
    container_name: core.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "14001:80"
    networks:
     - vangurdiot

  core.api-dapr:
    container_name: core.api-dapr
    command: [ "./daprd",
               "-app-id", "core.api",
               "-app-port", "80",
               "-components-path", "/components"]
    depends_on:
      - core.api
    network_mode: "service:core.api"
    volumes:
    - ./dapr/components/:/components   

networks:
 vangurdiot:

